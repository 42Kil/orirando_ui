name: ci

on:
  push:
    branches:
    - '*'

jobs:
  electron:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]

    steps:
    - name: Checkout 🛎
      uses: actions/checkout@master

    - name: Setup node env 🏗
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node }}
        check-latest: true

    - name: Get yarn cache directory path 🛠
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules 📦
      uses: actions/cache@v2.1.4
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies 👨🏻‍💻
      run: yarn install

    - name: Generate client
      run: |
        API_HOST=wotw.orirando.com API_SECURE=true IS_ELECTRON=true yarn generate
        cp -fr ./dist/* ./electron/public/

    - name: Build electron
      working-directory: ./electron
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update -y
        sudo apt-get install wine wine32 -y
        yarn install
        yarn electron:build -w -l

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-launcher
        path: |
          ./electron/dist_electron/*.AppImage
          ./electron/dist_electron/*.exe
